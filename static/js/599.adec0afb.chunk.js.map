{"version":3,"file":"static/js/599.adec0afb.chunk.js","mappings":"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","sources":["api/api.js","components/MoviesLayout/MoviesLayout.jsx","components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = '53263a417bdf2aa4ac46d1a4836d7bf0';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {};\naxios.defaults.params['api_key'] = API_KEY;\naxios.defaults.params['language'] = 'en-US';\n\nexport async function fetchMoviesTrend() {\n  const response = await axios.get(`/trending/all/day`);\n  return response.data.results;\n}\n\nexport async function fetchSearchMovies(query) {\n  const response = await axios.get('/search/movie', {\n    params: { query: query },\n  });\n\n  return response.data.results;\n}\n\nexport async function fetchDetailsMovie(id) {\n  const response = await axios.get(`/movie/${id}`);\n  return response.data;\n}\n\nexport async function fetchCastMovie(id) {\n  const response = await axios.get(`/movie/${id}/credits`);\n  return response.data.cast;\n}\n\nexport async function fetchReviewsMovie(id) {\n  const response = await axios.get(`/movie/${id}/reviews`);\n  return response.data.results;\n}\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport const MoviesLayout = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.map(({ id, title }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import styled from 'styled-components';\nimport { HiSearch } from 'react-icons/hi';\n\nexport const Wrapper = styled.div`\n  display: inline-flex;\n  align-items: center;\n  position: relative;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 800px;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const Icon = styled(HiSearch)`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  right: 6px;\n  fill: #274cdd;\n`;\n\nexport const SearchFormInput = styled.input`\n  width: 100%;\n  padding: 8px 32px 8px 8px;\n  border-radius: 2px;\n  font: inherit;\n  border-color: #274cdd;\n\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport {\n  SearchForm,\n  Wrapper,\n  Icon,\n  SearchFormInput,\n} from 'components/Searchbar/Searchbar.styled';\n\nexport function Searchbar({ onSubmit }) {\n  const [searchMovie, setSearchMovie] = useState('');\n\n  const handleSearchWord = e => {\n    setSearchMovie(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSearchSubmit = e => {\n    e.preventDefault();\n\n    if (searchMovie.trim() === '') {\n      toast.error(`Sorry, movie not found. Please try again.`);\n      return;\n    }\n    onSubmit(searchMovie);\n    setSearchMovie('');\n  };\n\n  const handleSearchIconClick = () => {\n    if (searchMovie.trim() === '') {\n      toast.error(`Sorry, movie not found. Please try again.`);\n      return;\n    }\n    onSubmit(searchMovie);\n    setSearchMovie('');\n  };\n\n  return (\n    <Wrapper>\n      <SearchForm onSubmit={handleSearchSubmit}>\n        <Icon onClick={handleSearchIconClick} />\n        <SearchFormInput\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movie\"\n          value={searchMovie}\n          onChange={handleSearchWord}\n        />\n      </SearchForm>\n    </Wrapper>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { Searchbar } from '../../components/Searchbar/Searchbar.jsx';\nimport { fetchSearchMovies } from '../../api/api.js';\nimport { Loader } from 'components/Loader/Loader';\nimport { MoviesLayout } from '../../components/MoviesLayout/MoviesLayout.jsx';\n\nexport default function Movies() {\n  const [status, setStatus] = useState('idle');\n  const [searchMovie, setSearchMovie] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  const changeFilter = searchMovie => {\n    setSearchParams(searchMovie !== '' ? { query: searchMovie } : {});\n  };\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    const controller = new AbortController();\n\n    async function fetchSearchMoviesItems() {\n      setStatus('pending');\n\n      try {\n        const moviesItems = await fetchSearchMovies(query, {\n          signal: controller.signal,\n        });\n\n        setSearchMovie(moviesItems);\n        setStatus('resolved');\n      } catch (error) {\n        toast.error('Something went wrong. Please, reload the page.');\n        setStatus('rejected');\n      } finally {\n        setStatus('resolved');\n      }\n    }\n\n    fetchSearchMoviesItems();\n\n    return () => {\n      controller.abort();\n    };\n  }, [query]);\n\n  return (\n    <main>\n      <Searchbar value={query} onSubmit={changeFilter} />\n\n      {status === 'pending' && <Loader />}\n\n      {searchMovie.length > 0 && <MoviesLayout movies={searchMovie} />}\n    </main>\n  );\n}\n"],"names":["fetchMoviesTrend","axios","response","data","results","fetchSearchMovies","query","params","fetchDetailsMovie","id","fetchCastMovie","cast","fetchReviewsMovie","MoviesLayout","movies","location","useLocation","map","title","to","state","from","Wrapper","styled","SearchForm","Icon","HiSearch","SearchFormInput","Searchbar","onSubmit","useState","searchMovie","setSearchMovie","e","preventDefault","trim","toast","onClick","type","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","Movies","status","setStatus","useSearchParams","searchParams","setSearchParams","get","useEffect","controller","AbortController","fetchSearchMoviesItems","abort","signal","moviesItems","Loader","length"],"sourceRoot":""}