{"version":3,"file":"static/js/304.ffed9dfb.chunk.js","mappings":"+SACMA,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,EAAAA,EAAAA,IAAA,gEACoCF,IAFtD,cACCG,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,uFACkBL,EAAAA,EAAAA,IAAA,0DAC8BK,EAD9B,oBAC+CP,EAD/C,oBADlB,cACCG,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,uFACkBP,EAAAA,EAAAA,IAAA,6CACiBO,EADjB,oBAC+BT,EAD/B,oBADlB,cACCG,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA8BD,GAA9B,uFACkBP,EAAAA,EAAAA,IAAA,6CACiBO,EADjB,4BACuCT,IAFzD,cACCG,EADD,yBAIEA,EAASC,KAAKO,MAJhB,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCH,GAAjC,uFACkBP,EAAAA,EAAAA,IAAA,6CACiBO,EADjB,4BACuCT,IAFzD,cACCG,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kE,oKC7BMQ,EAAYC,EAAAA,GAAAA,IAAH,sBAETC,EAAcD,EAAAA,GAAAA,IAAH,sB,SCET,SAASE,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAsBA,OApBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBADT,wCAGd,8GAE8BrB,EAAAA,EAAAA,IAAiB,CACzCsB,OAAQF,EAAWE,SAHzB,OAEUC,EAFV,OAKIL,EAAQK,GALZ,gDAOIC,EAAAA,GAAAA,MAAY,kDAPhB,0DAHc,sBAed,OAfc,mCAadC,GAEO,WACLL,EAAWM,OACZ,CACF,GAAE,KAGD,UAACd,EAAD,YACE,wBAAI,8BACHK,EAAKU,KAAI,gBAAGnB,EAAH,EAAGA,GAAIoB,EAAP,EAAOA,MAAP,OACR,SAACd,EAAD,WACE,SAAC,KAAD,CAAMe,GAAE,kBAAarB,GAArB,SAA4BoB,KADZpB,EADV,KAKV,SAAC,KAAD,CAAgBsB,SAAS,YAAYC,UAAW,QAGrD,C","sources":["api/api.js","pages/Home/Home.styled.js","pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = '53263a417bdf2aa4ac46d1a4836d7bf0';\n\nexport async function fetchMoviesTrend() {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`\n  );\n  return response.data.results;\n}\n\nexport async function fetchSearchMovies(query) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n}\n\nexport async function fetchDetailsMovie(id) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function fetchCastMovie(id) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return response.data.cast;\n}\n\nexport async function fetchReviewsMovie(id) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return response.data.results;\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div``;\n\nexport const CardWrapper = styled.div``;\n","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { fetchMoviesTrend } from '../../api/api.js';\nimport { Container, CardWrapper } from './Home.styled.js';\n\nexport default function Home() {\n  const [list, setList] = useState([]);\n\n  useEffect(() => {\n    const controller = new AbortController();\n\n    async function fetchMoviesTrendItems() {\n      try {\n        const moviesTrend = await fetchMoviesTrend({\n          signal: controller.signal,\n        });\n        setList(moviesTrend);\n      } catch (error) {\n        toast.error('Something went wrong. Please, reload the page.');\n      }\n    }\n    fetchMoviesTrendItems();\n\n    return () => {\n      controller.abort();\n    };\n  }, []);\n\n  return (\n    <Container>\n      <h2>Movies are trending today</h2>\n      {list.map(({ id, title }) => (\n        <CardWrapper key={id}>\n          <Link to={`/movies/${id}`}>{title}</Link>\n        </CardWrapper>\n      ))}\n      <ToastContainer position=\"top-right\" autoClose={3000} />\n    </Container>\n  );\n}\n"],"names":["API_KEY","fetchMoviesTrend","axios","response","data","results","fetchSearchMovies","query","fetchDetailsMovie","id","fetchCastMovie","cast","fetchReviewsMovie","Container","styled","CardWrapper","Home","useState","list","setList","useEffect","controller","AbortController","signal","moviesTrend","toast","fetchMoviesTrendItems","abort","map","title","to","position","autoClose"],"sourceRoot":""}