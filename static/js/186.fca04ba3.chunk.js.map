{"version":3,"file":"static/js/186.fca04ba3.chunk.js","mappings":"+SACMA,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,EAAAA,EAAAA,IAAA,gEACoCF,IAFtD,cACCG,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,uFACkBL,EAAAA,EAAAA,IAAA,0DAC8BK,EAD9B,oBAC+CP,EAD/C,oBADlB,cACCG,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,uFACkBP,EAAAA,EAAAA,IAAA,6CACiBO,EADjB,oBAC+BT,EAD/B,oBADlB,cACCG,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA8BD,GAA9B,uFACkBP,EAAAA,EAAAA,IAAA,6CACiBO,EADjB,4BACuCT,IAFzD,cACCG,EADD,yBAIEA,EAASC,KAAKO,MAJhB,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCH,GAAjC,uFACkBP,EAAAA,EAAAA,IAAA,6CACiBO,EADjB,4BACuCT,IAFzD,cACCG,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kE,iKCzBQ,SAASQ,IACtB,IAAQC,GAAWC,EAAAA,EAAAA,MAAXD,OACR,GAA4BE,EAAAA,EAAAA,UAAS,QAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCF,EAAAA,EAAAA,UAAS,IAAjD,eAAOG,EAAP,KAAqBC,EAArB,KA6BA,OA3BAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBADT,wCAGd,2FACEL,EAAU,WADZ,mBAI+BN,EAAAA,EAAAA,IAAkBE,EAAQ,CACnDU,OAAQF,EAAWE,SALzB,OAIUL,EAJV,OAQIC,EAAgBD,GAEhBD,EAAU,YAVd,gDAYIO,EAAAA,GAAAA,MAAY,kDACZP,EAAU,YAbd,0DAHc,sBAsBd,OAtBc,mCAoBdQ,GAEO,WACLJ,EAAWK,OACZ,CACF,GAAE,CAACb,KAGF,gCACc,YAAXG,IAAwB,SAAC,IAAD,IACxBE,EAAaS,OAAS,GACrB,wBACGT,EAAaU,KAAI,gBAAGpB,EAAH,EAAGA,GAAIqB,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,eAAhB,OAChB,2BACE,wBAAKA,EAAeC,YACpB,uBAAIF,MAFGrB,EADO,OAQpB,uBAAG,kDAIV,C","sources":["api/api.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = '53263a417bdf2aa4ac46d1a4836d7bf0';\n\nexport async function fetchMoviesTrend() {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`\n  );\n  return response.data.results;\n}\n\nexport async function fetchSearchMovies(query) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n}\n\nexport async function fetchDetailsMovie(id) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function fetchCastMovie(id) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return response.data.cast;\n}\n\nexport async function fetchReviewsMovie(id) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return response.data.results;\n}\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Loader } from 'components/Loader/Loader';\nimport { fetchReviewsMovie } from '../../api/api.js';\n\nexport default function Reviews() {\n  const { itemId } = useParams();\n  const [status, setStatus] = useState('idle');\n  const [reviewsMovie, setReviewsMovie] = useState([]);\n\n  useEffect(() => {\n    const controller = new AbortController();\n\n    async function fetchReviewsMovieCard() {\n      setStatus('pending');\n\n      try {\n        const reviewsMovie = await fetchReviewsMovie(itemId, {\n          signal: controller.signal,\n        });\n\n        setReviewsMovie(reviewsMovie);\n\n        setStatus('resolved');\n      } catch (error) {\n        toast.error('Something went wrong. Please, reload the page.');\n        setStatus('rejected');\n      }\n    }\n\n    fetchReviewsMovieCard();\n\n    return () => {\n      controller.abort();\n    };\n  }, [itemId]);\n\n  return (\n    <>\n      {status === 'pending' && <Loader />}\n      {reviewsMovie.length > 0 ? (\n        <ul>\n          {reviewsMovie.map(({ id, content, author_details }) => (\n            <li key={id}>\n              <h2>{author_details.username}</h2>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>You will be the first to leave a review! :)</p>\n      )}\n    </>\n  );\n}\n"],"names":["API_KEY","fetchMoviesTrend","axios","response","data","results","fetchSearchMovies","query","fetchDetailsMovie","id","fetchCastMovie","cast","fetchReviewsMovie","Reviews","itemId","useParams","useState","status","setStatus","reviewsMovie","setReviewsMovie","useEffect","controller","AbortController","signal","toast","fetchReviewsMovieCard","abort","length","map","content","author_details","username"],"sourceRoot":""}