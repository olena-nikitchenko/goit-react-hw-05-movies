{"version":3,"file":"static/js/599.f8b3d10c.chunk.js","mappings":"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","sources":["api/api.js","components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = '53263a417bdf2aa4ac46d1a4836d7bf0';\n\nexport async function fetchMoviesTrend() {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`\n  );\n  return response.data.results;\n}\n\nexport async function fetchSearchMovies(query) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n}\n\nexport async function fetchDetailsMovie(id) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function fetchCastMovie(id) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return response.data.cast;\n}\n\nexport async function fetchReviewsMovie(id) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return response.data.results;\n}\n","import styled from 'styled-components';\nimport { HiSearch } from 'react-icons/hi';\n\nexport const Wrapper = styled.div`\n  display: inline-flex;\n  align-items: center;\n  position: relative;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 800px;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const Icon = styled(HiSearch)`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  right: 6px;\n  fill: #274cdd;\n`;\n\nexport const SearchFormInput = styled.input`\n  width: 100%;\n  padding: 8px 32px 8px 8px;\n  border-radius: 2px;\n  font: inherit;\n  border-color: #274cdd;\n\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport {\n  SearchForm,\n  Wrapper,\n  Icon,\n  SearchFormInput,\n} from 'components/Searchbar/Searchbar.styled';\n\nexport function Searchbar({ onSubmit }) {\n  const [searchMovie, setSearchMovie] = useState('');\n\n  const handleSearchWord = e => {\n    setSearchMovie(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSearchSubmit = e => {\n    e.preventDefault();\n\n    if (searchMovie.trim() === '') {\n      toast.error(`Sorry, movie not found. Please try again.`);\n      return;\n    }\n    onSubmit(searchMovie);\n    setSearchMovie('');\n  };\n\n  const handleSearchIconClick = () => {\n    if (searchMovie.trim() === '') {\n      toast.error(`Sorry, movie not found. Please try again.`);\n      return;\n    }\n    onSubmit(searchMovie);\n    setSearchMovie('');\n  };\n\n  return (\n    <Wrapper>\n      <SearchForm onSubmit={handleSearchSubmit}>\n        <Icon onClick={handleSearchIconClick} />\n        <SearchFormInput\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movie\"\n          value={searchMovie}\n          onChange={handleSearchWord}\n        />\n      </SearchForm>\n    </Wrapper>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Searchbar } from '../../components/Searchbar/Searchbar.jsx';\nimport { fetchSearchMovies } from '../../api/api.js';\nimport { Loader } from 'components/Loader/Loader';\n\nexport default function Movies() {\n  const location = useLocation();\n  const [status, setStatus] = useState('idle');\n  const [seachMovie, setSeachMovie] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  const changeFilter = seachMovie => {\n    setSearchParams(seachMovie !== '' ? { query: seachMovie } : {});\n  };\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    const controller = new AbortController();\n\n    async function fetchSearchMoviesItems() {\n      setStatus('pending');\n\n      try {\n        const moviesItems = await fetchSearchMovies(query, {\n          signal: controller.signal,\n        });\n\n        setSeachMovie(moviesItems);\n        setStatus('resolved');\n      } catch (error) {\n        toast.error('Something went wrong. Please, reload the page.');\n        setStatus('rejected');\n      } finally {\n        setStatus('resolved');\n      }\n    }\n\n    fetchSearchMoviesItems();\n\n    return () => {\n      controller.abort();\n    };\n  }, [query]);\n\n  return (\n    <main>\n      <Searchbar value={query} onSubmit={changeFilter} />\n\n      {status === 'pending' && <Loader />}\n\n      {seachMovie.length > 0 && (\n        <ul>\n          {seachMovie.map(({ id, title }) => (\n            <li key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                {title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </main>\n  );\n}\n"],"names":["API_KEY","fetchMoviesTrend","axios","response","data","results","fetchSearchMovies","query","fetchDetailsMovie","id","fetchCastMovie","cast","fetchReviewsMovie","Wrapper","styled","SearchForm","Icon","HiSearch","SearchFormInput","Searchbar","onSubmit","useState","searchMovie","setSearchMovie","e","preventDefault","trim","toast","onClick","type","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","Movies","location","useLocation","status","setStatus","seachMovie","setSeachMovie","useSearchParams","searchParams","setSearchParams","get","useEffect","controller","AbortController","fetchSearchMoviesItems","abort","signal","moviesItems","Loader","length","map","title","to","state","from"],"sourceRoot":""}